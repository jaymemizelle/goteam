{"version":3,"sources":["components/TeamTable/index.js","components/sections/Search/SearchBar.js","components/sections/Search/Search.js","components/sections/Header/Header.js","components/sections/Footer/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["MemberRow","i","picture","name","email","location","timezone","Fragment","alt","src","thumbnail","first","last","country","offset","TeamTable","searchTerm","useState","teamMembers","setTeamMembers","console","log","useEffect","fetch","then","res","json","results","contains","str","match","toLowerCase","indexOf","className","Table","striped","bordered","hover","filter","map","SearchBar","setSearchTerm","Form","Control","type","placeholder","value","onChange","target","Search","id","Group","Button","variant","Header","Contact","controlId","Label","Text","as","rows","App","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d6c8750.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./team.css\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction TeamTable({ searchTerm }) {\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n  console.log(searchTerm);\r\n  useEffect(() => {\r\n    fetch(\"https://randomuser.me/api/?results=50\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setTeamMembers(res.results);\r\n      });\r\n  }, []);\r\n\r\n  const contains = (str, match) =>\r\n    str.toLowerCase().indexOf(match.toLowerCase()) !== -1;\r\n\r\n  const handleFilter = ({ name, location }) =>\r\n    !searchTerm ||\r\n    contains(name.first, searchTerm) ||\r\n    contains(name.last, searchTerm) ||\r\n    contains(location.country, searchTerm);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"tableTitle\">Team Members</h2>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Photo</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Location</th>\r\n            <th>Timezone Offset</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {teamMembers\r\n            .filter(handleFilter)\r\n            .map(({ picture, name, email, location, timezone }, i) => (\r\n              <MemberRow\r\n                i={i}\r\n                picture={picture}\r\n                name={name}\r\n                email={email}\r\n                location={location}\r\n                timezone={timezone}\r\n              />\r\n            ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nconst MemberRow = ({ i, picture, name, email, location, timezone }) => {\r\n  return (\r\n    < React.Fragment key={i}>\r\n      <tr>\r\n        <td>{i}</td>\r\n        <td>\r\n          <img alt=\"team member\" src={picture.thumbnail} />\r\n        </td>\r\n        <td>{name.first}</td>\r\n        <td>{name.last}</td>\r\n        <td>{email}</td>\r\n        <td>{location.country}</td>\r\n        <td>{location.timezone.offset}</td>\r\n      </tr>\r\n      </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TeamTable;\r\n","\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst SearchBar = ({ searchTerm, setSearchTerm }) => {\r\n    return (\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Search for a Team Member!\"\r\n        value={searchTerm}\r\n        onChange={({ target }) => setSearchTerm(target.value)}\r\n      />\r\n    );\r\n  };\r\n\r\nexport default SearchBar;","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport \"./search.css\";\r\nimport SearchBar from \"./SearchBar\"\r\n\r\nfunction Search({searchTerm, setSearchTerm}) {\r\n  return (\r\n    <div id=\"search\">\r\n      <h2 className=\"searchTitle\">Search</h2>\r\n      <Form.Group className=\"searchBox\">\r\n        <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm}/>\r\n        <span>\r\n          <Button className=\"searchBtn\" variant=\"primary\" type=\"submit\">\r\n            Search\r\n          </Button>\r\n        </span>\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport \"./header.css\";\r\nimport TeamTable from \"../../TeamTable\";\r\nimport Search from \"../Search/Search\"\r\n\r\nfunction Header() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"bg\">\r\n        <div className=\"layer\"></div>\r\n        <div className=\"headerText\">\r\n          <h1 className=\"goTeam\">GoTeam</h1>\r\n          <p>Build Connection. Organize Workflow. Optimize Team Management.</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"homeText\">\r\n        <h2 className=\"homeTitle\">Welcome to GoTeam!</h2>\r\n        <p className=\"instructions\">\r\n          View your teammates' non sensitive data in the table below and use the search bar to filter which teammates you'd like to see! Go ahead. Try searching by the first name or last name of your teammates, or even search by their location to see who comes up! Have fun and remember not to take life too seriously. It isn't permanent!\r\n        </p>\r\n        <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm}/>\r\n        <TeamTable searchTerm={searchTerm}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport \"./contact.css\";\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div className=\"contactContainer\">\r\n      <Form className=\"contactForm\">\r\n        <h2 className=\"contactTitle\" id=\"contact\">\r\n          Contact\r\n        </h2>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Message</Form.Label>\r\n          <Form.Control as=\"textarea\" rows={3} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import Header from \"./components/sections/Header/Header\";\n// import NavTabs from \"./components/NavTabs/NavTabs\";\nimport Search from \"./components/sections/Search/Search\";\nimport Contact from \"./components/sections/Footer/Contact\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"navbar\">\n        <Header />\n        <HashLink className=\"searchLink\" to=\"/#search\">Search</HashLink>\n        <HashLink className=\"contactLink\" to=\"/#contact\">Contact</HashLink>\n        <Contact />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}